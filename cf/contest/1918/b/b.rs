/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: maijing
 * Time: 2024-01-31 18:16:23
**/

use std::io::{self, BufRead};

fn read_line() -> String {
    let stdin = io::stdin();
    let mut line = String::new();
    stdin.lock().read_line(&mut line).unwrap();
    line
}
fn main() {
    let t = read_line().trim().parse().unwrap();

    for _ in 0..t {
        solve();
    }
}

fn solve() {
    let n: usize = read_line().trim().parse().unwrap();
    let a: Vec<usize> = read_line()
        .split_whitespace()
        .map(|x| x.parse().unwrap())
        .collect();
    let b: Vec<usize> = read_line()
        .split_whitespace()
        .map(|x| x.parse().unwrap())
        .collect();
    let mut c: Vec<usize> = vec![0; n];
    for i in 0..n {
        c[a[i] - 1] = b[i];
    }
    let new_a: Vec<usize> = (1..=n).collect();
    println!(
        "{}",
        new_a
            .iter()
            .map(|x| x.to_string())
            .collect::<Vec<String>>()
            .join(" ")
    );
    println!(
        "{}",
        c.iter()
            .map(|x| x.to_string())
            .collect::<Vec<String>>()
            .join(" ")
    );
}
