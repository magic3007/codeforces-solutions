/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: maijing
 * Time: 2024-01-31 18:17:57
**/

use std::io::{self, BufRead};

fn read_line() -> String {
    let stdin = io::stdin();
    let mut line = String::new();
    stdin.lock().read_line(&mut line).unwrap();
    line
}

fn main() {
    let t = read_line().trim().parse().unwrap();

    for _ in 0..t {
        solve();
    }
}

fn solve() {
    let nums: Vec<i64> = read_line()
        .split_whitespace()
        .map(|x| x.parse().unwrap())
        .collect();
    let (a, b, r) = (nums[0], nums[1], nums[2]);
    if a == b {
        println!("0");
        return;
    }
    let (mut a, mut b) = if a > b { (b, a) } else { (a, b) };
    let mut first_bit = true;
    let mut x = 0;
    for i in (0..63).rev() {
        let bit_a = (a >> i) & 1;
        let bit_b = (b >> i) & 1;
        if bit_a != bit_b {
            if first_bit {
                first_bit = false;
            } else {
                if bit_a==0 && x + (1i64<<i) <=r {
                    x += 1i64 << i;
                    a ^= 1i64 << i;
                    b ^= 1i64 << i;
                }
            }
        }
    }
    println!("{}", b- a);
}